<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="task">x_10227_pcm_rest_i_pcm_integrationISEMPTY^EQ<item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Check Send Conditions</name>
        <order>900</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// Check if an integration config exists for the current task
	
	var restController = new PCMRESTController(current.company,current.sys_class_name);
	var hasService = false;
	var hasStops = false;
	
	var restService = restController.getRestService();
	
	gs.addInfoMessage('Rest service is ' + restService)
	
	try {
		hasService = (restService != '');
		gs.addInfoMessage('Has service? ' + hasService);
	} catch(err){
		gs.addInfoMessage(err.message);
		return;
	}
	
	if (hasService){
		
		try{
			
			hasStops = restController.checkStopRules();
			
			gs.addInfoMessage('Has stops? ' + hasStops)
			
		} catch(em){
			gs.addInfoMessage(em.message);
			return;
		}
		
		if (!hasStops){
			current.setWorkflow(false);
			current.autoSysFields(false);
			current.x_10227_pcm_rest_i_pcm_integration = restService;
			current.update();
		}
		
		
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-02-29 16:46:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>af61877e4f3512002debb7a18110c759</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>Check Send Conditions</sys_name>
        <sys_overrides/>
        <sys_package display_value="PCM REST Integration" source="x_10227_pcm_rest_i">08aa4e254f311e402debb7a18110c7bf</sys_package>
        <sys_policy/>
        <sys_scope display_value="PCM REST Integration">08aa4e254f311e402debb7a18110c7bf</sys_scope>
        <sys_update_name>sys_script_af61877e4f3512002debb7a18110c759</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-03-04 17:55:19</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=af61877e4f3512002debb7a18110c759"/>
</record_update>
